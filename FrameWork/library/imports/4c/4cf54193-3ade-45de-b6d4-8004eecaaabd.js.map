{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\scripts\\core\\DataMap/assets\\scripts\\core\\DataMap\\MapDataMgr.js"],"names":["GoodMapDecoder","require","MapDataMgr","cc","Class","extends","Component","properties","goodsMap","decodeAll","checkInitMapSuc","initMaps","Mgr","Parse","self","DecodeJson","result","director","GlobalEvent","emit","Event","ParseFinish","getDataByDataTypeAndId","itemType","itemId","data","DataType","Goods","getDataByItemId","module","exports"],"mappings":";;;;;;AAAA,IAAIA,iBAAiBC,QAAQ,gBAAR,CAArB;;AAEA,IAAIC,aAAaC,GAAGC,KAAH,CAAS;AACtBC,aAASF,GAAGG,SADU;;AAGtBC,gBAAY;AACRC,kBAAS,IADD,EACM;;AAEdC,mBAAU;AAHF,KAHU;;AAStBC,qBAAgB,2BAAU;AACtB,YAAG,KAAKD,SAAL,IAAkB,GAArB,EACA;AACI;AACH;AACJ,KAdqB;;AAgBtB;AACAE,cAAS,oBAAY;AACjB;AACAR,WAAGS,GAAH,CAAOC,KAAP,GAAe,KAAf;AACA,aAAKL,QAAL,GAAgB,IAAIR,cAAJ,EAAhB;AACA,YAAIc,OAAO,IAAX;AACA,aAAKL,SAAL,GAAiB,CAAjB;;AAEA,aAAKD,QAAL,CAAcO,UAAd,CAAyB,UAASC,MAAT,EAAgB;AACrC,gBAAGA,MAAH,EACA;AACIF,qBAAKL,SAAL,IAAiB,GAAjB;AACA;AACA,oBAAGK,KAAKL,SAAL,IAAkB,GAArB,EACA;AACIN,uBAAGS,GAAH,CAAOC,KAAP,GAAe,IAAf;AACAV,uBAAGc,QAAH,CAAYC,WAAZ,CAAwBC,IAAxB,CAA6BhB,GAAGS,GAAH,CAAOQ,KAAP,CAAaC,WAA1C,EAAuD,EAAvD;AACH;AACJ;AACJ,SAXD;AAYH,KApCqB;;AAsCtBC,4BAAuB,gCAASC,QAAT,EAAmBC,MAAnB,EAA0B;AAC7C,YAAIC,OAAO,IAAX;AACA,gBAAOF,QAAP;AAEI,iBAAKG,SAASC,KAAd;AACIF,uBAAO,KAAKjB,QAAL,CAAcoB,eAAd,CAA8BJ,MAA9B,CAAP;AACA;AAJR;AAMA,eAAOC,IAAP;AACH;;AA/CqB,CAAT,CAAjB;AAkDAI,OAAOC,OAAP,GAAiB5B,UAAjB","file":"MapDataMgr.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\core\\DataMap","sourcesContent":["var GoodMapDecoder = require(\"GoodMapDecoder\");\r\n\r\nvar MapDataMgr = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        goodsMap:null,//示例\r\n    \r\n        decodeAll:0,\r\n    },\r\n\r\n    checkInitMapSuc:function(){\r\n        if(this.decodeAll == 100)\r\n        {\r\n            //cc.log(\"数据解析完了\");\r\n        }\r\n    },\r\n\r\n    //初始化解析数据表\r\n    initMaps:function () {\r\n        //cc.log(\"开始解析数据了\");\r\n        cc.Mgr.Parse = false;\r\n        this.goodsMap = new GoodMapDecoder();     \r\n        var self = this; \r\n        this.decodeAll = 0;\r\n\r\n        this.goodsMap.DecodeJson(function(result){\r\n            if(result)\r\n            {\r\n                self.decodeAll +=100;\r\n                //解析数据表根据有多少来扩展\r\n                if(self.decodeAll == 100)\r\n                {\r\n                    cc.Mgr.Parse = true;\r\n                    cc.director.GlobalEvent.emit(cc.Mgr.Event.ParseFinish, {});\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    getDataByDataTypeAndId:function(itemType, itemId){\r\n        var data = null;\r\n        switch(itemType)\r\n        { \r\n            case DataType.Goods:\r\n                data = this.goodsMap.getDataByItemId(itemId);\r\n                break;\r\n        }\r\n        return data;\r\n    },\r\n\r\n});\r\nmodule.exports = MapDataMgr;\r\n"]}