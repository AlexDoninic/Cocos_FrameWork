{"version":3,"sources":["HttpMgr.js"],"names":["URL","HttpMgr","cc","Class","statics","sessionId","userId","master_url","url","sendRequest","path","data","handler","extraUrl","xhr","loader","getXMLHttpRequest","timeout","str","k","HTTP","requestURL","encodeURI","console","log","open","sys","isNative","setRequestHeader","onreadystatechange","readyState","status","responseText","length","ret","JSON","parse","e","ontimeout","event","onerror","send"],"mappings":";;;;;;AAAA,IAAIA,MAAM,uBAAV;AACA,IAAIC,UAAUC,GAAGC,KAAH,CAAS;AACnBC,aAAQ;AACJC,mBAAY,CADR;AAEJC,gBAAS,CAFL;AAGJC,oBAAWP,GAHP;AAIJQ,aAAIR,GAJA;AAKJS,qBAAc,qBAASC,IAAT,EAAcC,IAAd,EAAmBC,OAAnB,EAA2BC,QAA3B,EAAoC;AAC9C,gBAAIC,MAAMZ,GAAGa,MAAH,CAAUC,iBAAV,EAAV;AACAF,gBAAIG,OAAJ,GAAc,IAAd;AACA,gBAAIC,MAAM,GAAV;AACA,iBAAI,IAAIC,CAAR,IAAaR,IAAb,EAAkB;AACd,oBAAGO,OAAO,GAAV,EAAc;AACVA,2BAAO,GAAP,CADU,CACC;AACd;AACDA,uBAAOC,IAAI,GAAJ,GAAUR,KAAKQ,CAAL,CAAjB;AACH;AACD,gBAAGN,YAAY,IAAf,EAAoB;AAChBA,2BAAWO,KAAKZ,GAAhB;AACH;AACD,gBAAIa,aAAaR,WAAWH,IAAX,GAAkBY,UAAUJ,GAAV,CAAnC;AACAK,oBAAQC,GAAR,CAAY,gBAAgBH,UAA5B;;AAEAP,gBAAIW,IAAJ,CAAS,KAAT,EAAeJ,UAAf,EAA2B,IAA3B;;AAEA,gBAAInB,GAAGwB,GAAH,CAAOC,QAAX,EAAoB;AAAC;AACjBb,oBAAIc,gBAAJ,CAAqB,iBAArB,EAAuC,cAAvC,EAAsD,yBAAtD;AACH;;AAEDd,gBAAIe,kBAAJ,GAAyB,YAAW;AAChC,oBAAGf,IAAIgB,UAAJ,KAAmB,CAAnB,IAAyBhB,IAAIiB,MAAJ,IAAc,GAAd,IAAqBjB,IAAIiB,MAAJ,GAAa,GAA9D,EAAmE;AAC/DR,4BAAQC,GAAR,CAAY,cAAaV,IAAIkB,YAAJ,CAAiBC,MAA9B,GAAuC,IAAvC,GAA8CnB,IAAIkB,YAA9D;AACA,wBAAI;AACA,4BAAIE,MAAMC,KAAKC,KAAL,CAAWtB,IAAIkB,YAAf,CAAV;AACA,4BAAGpB,YAAY,IAAf,EAAoB;AAChBA,oCAAQsB,GAAR;AACH;AACJ,qBALD,CAKE,OAAOG,CAAP,EAAU;AACRd,gCAAQC,GAAR,CAAY,SAASa,CAArB;AACH,qBAPD,SAQO,CAEN;AACJ;AACJ,aAfD;;AAiBAvB,gBAAIwB,SAAJ,GAAgB,UAASC,KAAT,EAAe,CAE9B,CAFD,EAIAzB,IAAI0B,OAAJ,GAAc,UAASD,KAAT,EAAe,CAE5B,CAND,EAQAzB,IAAI2B,IAAJ,EARA;AASA,mBAAO3B,GAAP;AACH;AAtDG;AADW,CAAT,CAAd","file":"HttpMgr.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\core","sourcesContent":["var URL = \"http://127.0.0.1:9000\";\r\nvar HttpMgr = cc.Class({\r\n    statics:{\r\n        sessionId : 0,\r\n        userId : 0,\r\n        master_url:URL,\r\n        url:URL,\r\n        sendRequest : function(path,data,handler,extraUrl){\r\n            var xhr = cc.loader.getXMLHttpRequest();\r\n            xhr.timeout = 5000;\r\n            var str = \"?\";\r\n            for(var k in data){\r\n                if(str != \"?\"){\r\n                    str += \"&\";//增加一个中间的连接符\r\n                }\r\n                str += k + \"=\" + data[k];\r\n            }\r\n            if(extraUrl == null){\r\n                extraUrl = HTTP.url;\r\n            }\r\n            var requestURL = extraUrl + path + encodeURI(str);\r\n            console.log(\"RequestURL:\" + requestURL);\r\n            \r\n            xhr.open(\"GET\",requestURL, true);\r\n\r\n            if (cc.sys.isNative){//是否是原生平台\r\n                xhr.setRequestHeader(\"Accept-Encoding\",\"gzip,deflate\",\"text/html;charset=UTF-8\");\r\n            }\r\n            \r\n            xhr.onreadystatechange = function() {\r\n                if(xhr.readyState === 4 && (xhr.status >= 200 && xhr.status < 300)){\r\n                    console.log(\"http res(\"+ xhr.responseText.length + \"):\" + xhr.responseText);\r\n                    try {\r\n                        var ret = JSON.parse(xhr.responseText);\r\n                        if(handler !== null){\r\n                            handler(ret);\r\n                        }\r\n                    } catch (e) {\r\n                        console.log(\"err:\" + e);\r\n                    }\r\n                    finally{\r\n                        \r\n                    }\r\n                }\r\n            };\r\n\r\n            xhr.ontimeout = function(event){\r\n\r\n            },\r\n\r\n            xhr.onerror = function(event){\r\n                \r\n            },\r\n\r\n            xhr.send();\r\n            return xhr;\r\n        },\r\n    },\r\n});\r\n"]}